services:
    # ---------------- PostgreSQL ----------------
    pgsql:
        image: postgres:17.6
        container_name: PostgreSQL
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /var/lib/postgresql/data
        volumes:
            - pgsql_data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - db_net

    # ---------------- MongoDB ----------------
    mongo:
        image: mongo:8.0.12
        container_name: MongoDB
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
            MONGO_INITDB_DATABASE: ${MONGO_DB}
        volumes:
            - mongo_data:/data/db
            - mongo_config:/data/configdb
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    "mongosh --eval 'db.adminCommand({ ping: 1 })' -u ${MONGO_ROOT_USER} -p ${MONGO_ROOT_PASS} --authenticationDatabase admin || exit 1",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - db_net

    # ---------------- Metabase ----------------
    metabase_db:
        image: postgres:16.3
        container_name: MB_PostgreSQL
        environment:
            POSTGRES_USER: ${METABASE_DB_USER}
            POSTGRES_PASSWORD: ${METABASE_DB_PASS}
            POSTGRES_DB: ${METABASE_DB_NAME}
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -d ${METABASE_DB_NAME} -U ${METABASE_DB_USER}']
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - mb_db_data:/var/lib/postgresql/data
        networks:
            - mb_net

    metabase:
        image: metabase/metabase:v0.52.7
        container_name: Metabase
        restart: unless-stopped
        environment:
            MB_DB_HOST: metabase_db
            MB_DB_PORT: 5432
            MB_DB_USER: ${METABASE_DB_USER}
            MB_DB_PASS: ${METABASE_DB_PASS}
            MB_DB_DBNAME: ${METABASE_DB_NAME}
        volumes:
            - metabase_data:/metabase-data
        expose:
            - '3000'
        depends_on:
            - metabase_db
        networks:
            - mb_net
            - npm_net
            - db_net

volumes:
    pgsql_data:
        name: pgsql_data
    mongo_data:
        name: mongo_data
    mongo_config:
        name: mongo_config
    metabase_data:
        name: metabase_data
    mb_db_data:
        name: mb_db_data

networks:
    npm_net:
        name: npm_net
        external: true
    db_net:
        name: db_net
    mb_net:
        name: mb_net
