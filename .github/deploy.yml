name: Deploy to Hetzner

on:
    push:
        branches:
            - master
            - main
        paths:
            - 'docker_containers/main/**'
            - 'docker_containers/database/**'

jobs:
    deploy-main:
        if: contains(github.event.head_commit.message, 'docker_containers/main') || github.event_name == 'workflow_dispatch'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_KEY }}

            - name: Deploy main container
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                  set -e
                  cd ~/docker_containers/main
                  git reset --hard
                  git pull origin master
                  docker compose pull
                  docker compose down
                  docker compose up -d --remove-orphans
                  docker image prune -f
                  EOF

    deploy-database:
        if: contains(github.event.head_commit.message, 'docker_containers/database') || github.event_name == 'workflow_dispatch'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_KEY }}

            - name: Deploy database container
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                  set -e
                  cd ~/docker_containers/database
                  git reset --hard
                  git pull origin master
                  docker compose pull
                  docker compose down
                  docker compose up -d --remove-orphans
                  docker image prune -f
                  EOF
