services:
    # ---------------- Grafana ----------------
    grafana:
        image: grafana/grafana:11.2.0
        container_name: Grafana
        restart: unless-stopped
        user: '1000'
        environment:
            - GF_SERVER_ROOT_URL=https://grafana.shijar.dev
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
        networks:
            - npm_net
        volumes:
            - /docker/monitoring/grafana:/var/lib/grafana
            - ./grafana/provisioning:/etc/grafana/provisioning
            - ./grafana/dashboards:/etc/grafana/dashboards
        expose:
            - '3000'

    # ---------------- Loki ----------------
    loki:
        image: grafana/loki:3.1.1
        container_name: Loki
        restart: unless-stopped
        networks:
            - npm_net
        volumes:
            - /docker/monitoring/loki:/loki
            - ./loki:/etc/loki
        expose:
            - '3100'
        command: -config.file=/etc/loki/loki-config.yml

    # ---------------- Promtail ----------------
    promtail:
        image: grafana/promtail:3.1.1
        container_name: Promtail
        restart: unless-stopped
        networks:
            - npm_net
        volumes:
            - /var/log:/var/log
            - /var/run/docker.sock:/var/run/docker.sock
            - ./promtail:/etc/promtail
        command: -config.file=/etc/promtail/promtail-config.yml
        depends_on:
            - loki

    # ---------------- Prometheus ----------------
    prometheus:
        image: prom/prometheus:latest
        container_name: Prometheus
        restart: unless-stopped
        networks:
            - npm_net
        volumes:
            - /docker/monitoring/prometheus:/prometheus
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
        expose:
            - '9090'

    # ---------------- Alertmanager ----------------
    alertmanager:
        image: prom/alertmanager:latest
        container_name: AlertManager
        restart: unless-stopped
        networks:
            - npm_net
        volumes:
            - /docker/monitoring/alertmanager:/alertmanager
            - ./alertmanager/config.yml:/etc/alertmanager/config.yml:ro
        expose:
            - '9093'

    # ---------------- Node Exporter ----------------
    node-exporter:
        image: prom/node-exporter:latest
        container_name: Node-Exporter
        restart: unless-stopped
        network_mode: 'host' # Full access to host metrics
        pid: 'host'
        expose:
            - '9100'

networks:
    npm_net:
        name: npm_net
        external: true

volumes:
    Grafana:
        driver: local
    Loki:
        driver: local
    Prometheus:
        driver: local
    AlertManager:
        driver: local
