name: Deploy to Hetzner

on:
    push:
        branches:
            - master
            - main

jobs:
    detect-changes:
        runs-on: ubuntu-latest
        outputs:
            main: ${{ steps.changes.outputs.main }}
            database: ${{ steps.changes.outputs.database }}
            vscode: ${{ steps.changes.outputs.vscode }}
            n8n: ${{ steps.changes.outputs.n8n }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Detect changed folders
              id: changes
              uses: dorny/paths-filter@v2
              with:
                  filters: |
                      main:
                          - 'main/**'
                      database:
                          - 'database/**'
                      n8n:
                          - 'n8n/**'

    deploy-main:
        needs: detect-changes
        if: needs.detect-changes.outputs.main == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_KEY }}

            - name: Deploy main container
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                  set -e
                  cd ~/docker_containers/main
                  git reset --hard
                  git pull origin master || git pull origin main || echo "No new commits to pull"
                  docker compose pull
                  docker compose down
                  docker compose up -d --remove-orphans
                  docker system prune -af --volumes
                  EOF

    deploy-database:
        needs: detect-changes
        if: needs.detect-changes.outputs.database == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_KEY }}

            - name: Deploy database container
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                  set -e
                  cd ~/docker_containers/database
                  git reset --hard
                  git pull origin master || git pull origin main || echo "No new commits to pull"
                  docker compose pull
                  docker compose down
                  docker compose up -d --remove-orphans
                  docker system prune -af --volumes
                  EOF

    deploy-n8n:
        needs: detect-changes
        if: needs.detect-changes.outputs.n8n == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_KEY }}

            - name: Deploy n8n container
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                  set -e
                  cd ~/docker_containers/n8n
                  git reset --hard
                  git pull origin master || git pull origin main || echo "No new commits to pull"
                  docker compose pull
                  docker compose down

                  # Delay to ensure PostgreSQL is ready
                  echo "Waiting 15 seconds for database to be ready..."
                  sleep 15

                  docker compose up -d --remove-orphans
                  docker system prune -af --volumes
                  EOF
